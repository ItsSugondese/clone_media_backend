name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up Go
#        uses: actions/setup-go@v5
#        with:
#          go-version: '1.23'
#
#      - name: Cache Go modules
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/go/pkg/mod
#            ~/.cache/go-build
#          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: |
#            ${{ runner.os }}-go-
#
#      - name: Install dependencies
#        run: go mod tidy
#
#      - name: Install swag
#        run: |
#          go install github.com/swaggo/swag/cmd/swag@latest
#          echo "${HOME}/go/bin" >> $GITHUB_PATH
#
#      - name: Run swagger
#        run: swag init
#
#      - name: Build
#        run: go build -v ./...

  deploy:
    runs-on: ubuntu-latest
#    needs: build
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy on EC2
        run: |
          ssh ec2-user@${{ secrets.EC2_HOST }} "
            cd /home/ec2-user/projects/golang/clone_media_backend && \
            mv .env ../
            git pull origin main && \
            mv ../.env ./
            sudo docker compose down && \
            sudo docker compose up -d --build
          "